# For documentation see here - https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml
service: uec-dos-integration
frameworkVersion: '2'
variablesResolutionMode: 20210326
configValidationMode: error
unresolvedVariablesNotificationMode: error

provider:
  name: aws
  lambdaHashingVersion: 20201221
  architecture: x86_64
  region: ${env:AWS_REGION}
  versionFunctions: false
  deploymentBucket:
    blockPublicAccess: true
    skipPolicySetup: true
  tags:
    Environment: ${env:ENVIRONMENT}
    PROFILE: ${env:PROFILE}
    Product: ${env:PROJECT_ID}
    Programme: ${env:PROGRAMME}
    Service: ${env:PROJECT_ID}
  environment:
    PROFILE: ${env:PROFILE}
    ENV: ${env:ENVIRONMENT}
    POWERTOOLS_SERVICE_NAME: ${env:PROGRAMME}-${env:TEAM_ID}-${sls:stage}
    POWERTOOLS_TRACER_CAPTURE_RESPONSE: true
    POWERTOOLS_TRACER_CAPTURE_ERROR: true
    POWERTOOLS_TRACE_MIDDLEWARES: true
    LOG_LEVEL: ${env:LOG_LEVEL}
    BUILD_TIMESTAMP: ${env:VERSION}
    CODE_VERSION: ${env:BUILD_COMMIT_HASH}
  logs:
    restApi:
      format: '{"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","resourcePath":"$context.resourcePath","status":"$context.status","responseLatency":"$context.responseLatency","xrayTraceId":"$context.xrayTraceId","integrationRequestId":"$context.integration.requestId","functionResponseStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent"}'
  tracing:
    lambda: true
    apiGateway: true
  apiGateway:
    apiKeySourceType: HEADER
    apiKeys:
      - name: ${env:TF_VAR_change_request_receiver_api_key_name}
        value: ${self:custom.secret.${env:TF_VAR_change_request_receiver_api_key_key}}
    usagePlan:
      throttle:
        rateLimit: 3
        burstLimit: 5
  endpointType: regional
  apiName: ${env:TF_VAR_change_request_receiver_api_name}

custom:
  secret: ${ssm:/aws/reference/secretsmanager/${env:TF_VAR_change_request_receiver_api_key_name}}
  localstack:
    stages: local
  vpcDiscovery:
  # Documentation - https://www.serverless.com/plugins/serverless-vpc-discovery
    vpcName: '${env:AWS_VPC_NAME}'
    subnets:
      - tagKey: Name
        tagValues:
          - '${env:AWS_VPC_NAME}-private-${env:AWS_REGION}a'
          - '${env:AWS_VPC_NAME}-private-${env:AWS_REGION}b'
          - '${env:AWS_VPC_NAME}-private-${env:AWS_REGION}c'
    securityGroups:
      - tagKey: Name
        tagValues:
          - '${env:TF_VAR_lambda_security_group_name}'

plugins:
  - serverless-vpc-discovery
  - serverless-localstack
functions:
  event-processor:
    image: ${env:AWS_SAME_ACCOUNT_DOCKER_REGISTRY}/event-processor:${env:VERSION}
    architecture: x86_64
    name: ${env:PROJECT_ID}-${sls:stage}-event-processor
    description: ${sls:stage} Event Processor lambda
    memorySize: 128
    timeout: 120
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/${env:TF_VAR_event_processor_role_name}
    maximumRetryAttempts: 0
    tags:
      PYTHON_VERSION: ${env:SERVERLESS_PYTHON_VERSION_TAG}
    environment:
      DB_SERVER: ${env:DB_SERVER}
      DB_PORT: ${env:DB_PORT}
      DB_NAME: ${env:DB_NAME}
      DB_SCHEMA: ${env:DB_SCHEMA}
      DB_USER_NAME: ${env:DB_USER_NAME}
      DB_SECRET_NAME: ${env:DB_SECRET_NAME}
      DB_SECRET_KEY: ${env:DB_SECRET_KEY}
      CHANGE_EVENTS_TABLE_NAME: ${env:TF_VAR_change_events_table_name}
      EVENTBRIDGE_BUS_NAME: ${env:TF_VAR_eventbridge_bus_name}
      KEYALIAS: ${env:TF_VAR_signing_key_alias}

  fifo-dlq-handler:
    image: ${env:AWS_SAME_ACCOUNT_DOCKER_REGISTRY}/fifo-dlq-handler:${env:VERSION}
    architecture: x86_64
    name: ${env:PROJECT_ID}-${sls:stage}-fifo-dlq-handler
    description: ${sls:stage} FIFO DLQ Handler lambda
    memorySize: 128
    timeout: 30
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/${env:TF_VAR_fifo_dlq_handler_role_name}
    tags:
      PYTHON_VERSION: ${env:SERVERLESS_PYTHON_VERSION_TAG}
    environment:
      CHANGE_EVENTS_TABLE_NAME: ${env:TF_VAR_change_events_table_name}
    maximumRetryAttempts: 0


  event-sender:
    image: ${env:AWS_SAME_ACCOUNT_DOCKER_REGISTRY}/event-sender:${env:VERSION}
    architecture: x86_64
    name: ${env:PROJECT_ID}-${sls:stage}-event-sender
    description: ${sls:stage} Event Sender lambda
    memorySize: 512
    timeout: 10
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/${env:TF_VAR_event_sender_role_name}
    tags:
      PYTHON_VERSION: ${env:SERVERLESS_PYTHON_VERSION_TAG}
    environment:
      DOS_API_GATEWAY_SECRETS: ${env:DOS_API_GATEWAY_SECRETS}
      DOS_API_GATEWAY_USERNAME_KEY: ${env:DOS_API_GATEWAY_USERNAME_KEY}
      DOS_API_GATEWAY_PASSWORD_KEY: ${env:DOS_API_GATEWAY_PASSWORD_KEY}
      DOS_API_GATEWAY_REQUEST_TIMEOUT: ${env:DOS_API_GATEWAY_REQUEST_TIMEOUT}
      DOS_API_GATEWAY_URL: ${env:DOS_API_GATEWAY_URL}
      KEYALIAS: ${env:TF_VAR_signing_key_alias}
    events:
      - http:
          path: /change-request
          method: post
          private: true
    maximumRetryAttempts: 0

  eventbridge-dlq-handler:
    image: ${env:AWS_SAME_ACCOUNT_DOCKER_REGISTRY}/eventbridge-dlq-handler:${env:VERSION}
    architecture: x86_64
    name: ${env:PROJECT_ID}-${sls:stage}-eventbridge-dlq-handler
    description: ${sls:stage} EventBridge DLQ Handler lambda
    memorySize: 128
    timeout: 30
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/${env:TF_VAR_eventbridge_dlq_handler_role_name}
    tags:
      PYTHON_VERSION: ${env:SERVERLESS_PYTHON_VERSION_TAG}
    maximumRetryAttempts: 0

  event-replay:
    image: ${env:AWS_SAME_ACCOUNT_DOCKER_REGISTRY}/event-replay:${env:VERSION}
    architecture: x86_64
    name: ${env:PROJECT_ID}-${sls:stage}-event-replay
    description: ${sls:stage} Event Replay lambda
    memorySize: 128
    timeout: 30
    role: arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/${env:TF_VAR_event_replay_role_name}
    tags:
      PYTHON_VERSION: ${env:SERVERLESS_PYTHON_VERSION_TAG}
    environment:
      CHANGE_EVENTS_TABLE_NAME: ${env:TF_VAR_change_events_table_name}
      FIFO_SQS_NAME: ${env:TF_VAR_fifo_queue_name}
    maximumRetryAttempts: 0
